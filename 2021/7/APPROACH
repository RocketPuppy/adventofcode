Part 1:

This looks a lot like it's just the median value

Part 2:

weighted median?
It's effectively an optimization problem I guess. I could try and compute it
with the fixed point combinator, and laziness could save me.

for N steps
1 + 2 + (n-1) + n
n + (n-1) + 2 + 1

(n+1) + (n+1) + (n+1) + (n+1) = 2S
n(n+1) = 2S
n(n+1)/2

for crabs
m+n m+(n-1) m+1 m = S
m m+1 m+(n-1) m+n = S

m+m+n m+1+m+(n-1) m+(n-1)+m+1 m+n+m = 2S
2m+n 2m+1+(n-1) 2m+1+(n-1) 2m+n = 2S
2m+n 2m+n 2m+n 2m+n = 2S
n(2m+n)/2 = S
(n^2 + 2mn)/2 = S
n^2/2 + mn = S <- Fuel for Crab at n units away from the center m.

(n-m)((n-m) + 1)/2 = fuel = f(n,m)
((n-m)^2 + n-m)/2 = fuel ****
n^2 - 2nm + m^2 + n - m = 2 * fuel

Set to 0, n-m is a position of zero fuel (n === m)
((n-m)^2 + n - m)/2 = 0
((n-m)^2 + n - m) = 0
n^2 - 2nm + m^2 + n - m = 0

Set to m, n-m is a position where fuel use is balanced with center
There are two solutions for this equation
((n-m)^2 + n - m)/2 = m
((n-m)^2 + n - m) = 2m
(n-m)^2 + n = 3m
n^2 - nm - mn + m^2 + n = 3m
n^2 - 2mn + m^2 + n = 3m
n^2 - 2mn + m^2 + n - 3m = 0


partial deriviative holding m constant
n^2 - 2nm + m^2 + n - m

2n - 2m + 1 = df/dn -- rate at which fuel use by crab changes when m is held constant and distance from m (n) varies

partial derivative holding n constant
n^2 - 2nm + m^2 + n - m

-2n + 2m + 1 = df/dm
2m - 2n + 1 = df/dm -- rate at which center changes if fuel use by crabs is held constant and the center point varies
Solving for df/dm = 0 yield m=1/2 n=1, or m is 1/2 n

Fit polynomial to data

0,1,1,2,2,2,4,7,14,16

0^2 - 2*0*m + m^2 + 0 - m = m^2 - m

16^2 - 2*16*m + m^2 + 16 - m = 256 - 32m + m^2 + 16 - m = m^2 - m
272 - 32m = 0
272 = 32m
m = 8.5

1^2 - 2m + m^2 + 1 - m = 14^2 - 28m + m^2 + 24 - m
2 - 2m = 220 - 28m
26m = 218
m = 8.38

Maximum fuel / 2? div some other factor? <--- This seems to work, my calculation was wrong on first try
Why is this?
Given a midpoint. Shift it left by 1. This adds m to the right side and subtracts m from the left side.
For set 1,2,3,4,5,6,7 (midpoint 4)
mid 1, left 0, right 1+2+3+4+5+6, total 21
mid 2, left 1, right 1+2+3+4+5, total 16, diff 5 subtract largest n and add smallest n
mid 3, left 1+2, right 1+2+3+4, total 13, diff 3
mid 4, left 1+2+3, right 1+2+3, total 12, diff 1

For set 1,2,4,5,6,7
mid 1 left 0, right 1+3+4+5+6, total 19
mid 2 left 1, right 2+3+4+5, total 15
mid 3 left 1+2, right 1+2+3+4, total 13
mid 4 left 2+3, right 1+2+3, total 11
mid 5 left 1+3+4, right 1+2, total 11





  +   +  
          + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13

0 + 1 +  
  +   +  

in total, sample made 45 steps
((n-m)^2 + n-m)/2 = f(n,m)

There's some midpoint where the cost on both sides is equal
sum f(n_i,m) where i from 0 to m
sum f(n_i,m) where i from m+1 to jA


I don't have the background to understand polynomial interpolation, especially with very large numbers of points.
I do have a fuel cost function, I can do a binary search to find the midpoint using that.
